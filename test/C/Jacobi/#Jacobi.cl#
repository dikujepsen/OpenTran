#define LSIZE 4

__kernel void Jacobi(
	__global float * B, unsigned hst_ptrB_dim1, unsigned wA, 
	unsigned hst_ptrX1_dim1, unsigned hst_ptrX2_dim1, __global float * X2, 
	__global float * X1)
{
  __local float X1_local[4*4];
  X1_local[((get_local_id(1) + -1) * 4) + get_local_id(0)] = X1[((get_global_id(1) + -1) * hst_ptrX1_dim1) + get_global_id(0)];
  X1_local[(get_local_id(1) * 4) + (get_local_id(0) + 1)] = X1[(get_global_id(1) * hst_ptrX1_dim1) + (get_global_id(0) - 1)];
  X1_local[((get_local_id(1) + 1) * 4) + get_local_id(0)] = X1[((get_global_id(1) - 1) * hst_ptrX1_dim1) + get_global_id(0)];
  X1_local[(get_local_id(1) * 4) + (get_local_id(0) + -1)] = X1[(get_global_id(1) * hst_ptrX1_dim1) + (get_global_id(0) + -1)];
  X2[(get_global_id(1) * hst_ptrX2_dim1) + get_global_id(0)] = (-0.25) * ((B[(get_global_id(1) * hst_ptrB_dim1) + get_global_id(0)] - (X1_local[((get_local_id(1) - 1) * hst_ptrX1_dim1) + get_local_id(0)] + X1_local[((get_local_id(1) + 1) * hst_ptrX1_dim1) + get_local_id(0)])) - (X1_local[(get_local_id(1) * hst_ptrX1_dim1) + (get_local_id(0) - 1)] + X1_local[(get_local_id(1) * hst_ptrX1_dim1) + (get_local_id(0) + 1)]));
}
