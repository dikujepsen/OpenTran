
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '{/\x17e\xe6=\x14m\xc6\t\xe7\xd9\x0c\xaa\x88e'
    
_lr_action_items = {'LOGOR':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,53,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,53,-34,-61,-59,]),'SHORT':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,6,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,6,-24,6,-11,-36,-70,6,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,6,-59,-63,]),'RSHIFT':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,51,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,51,-34,-61,-59,]),'UNKNOWN':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,9,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,9,-24,9,-11,-36,-70,9,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,9,-59,-63,]),'VOID':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,10,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,10,-24,10,-11,-36,-70,10,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,10,-59,-63,]),'NE':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,64,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,64,-34,-61,-59,]),'CHAR':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,14,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,14,-24,14,-11,-36,-70,14,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,14,-59,-63,]),'LOGNOT':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,66,67,68,69,70,71,74,75,76,77,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,111,121,],[-86,15,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-17,-18,15,-19,-20,-84,-24,15,-11,-36,-70,15,-62,15,15,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-59,-63,]),'FLOAT_CONST':([0,1,2,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,108,111,114,121,],[-86,44,-11,-3,44,-76,-65,-41,-74,-72,-7,-40,-75,-29,-66,-83,-28,-12,-25,-82,-78,-5,-10,-42,-86,44,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-48,-47,-54,-50,44,-51,-52,-56,44,-53,-55,-44,-49,-46,-57,-45,-58,44,-17,-18,44,-19,-20,-84,-24,44,-11,-36,-70,44,-62,44,44,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,44,-59,44,-63,]),'LSHIFT':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,60,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,60,-34,-61,-59,]),'MINUS':([0,1,2,4,6,7,8,9,10,11,12,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,66,67,68,69,70,71,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,111,121,],[-86,18,-11,-3,-76,-65,-41,-74,-72,-7,63,-35,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-17,-18,18,-19,-20,-84,-24,18,-11,-36,-35,-70,18,-62,18,18,-60,-38,-35,-37,63,-67,-34,-68,-69,-61,-59,-63,]),'DIVIDE':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,52,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,52,-34,-61,-59,]),'COMMENT':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,74,75,76,77,79,83,86,87,88,89,90,97,98,103,104,107,111,121,],[-86,19,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,-24,19,-11,-36,-70,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-59,-63,]),'INT_CONST':([0,1,2,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,108,111,114,121,],[-86,20,-11,-3,20,-76,-65,-41,-74,-72,-7,-40,-75,-29,-66,-83,-28,-12,-25,-82,-78,-5,-10,-42,-86,20,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-48,-47,-54,-50,20,-51,-52,-56,20,-53,-55,-44,-49,-46,-57,-45,-58,20,-17,-18,20,-19,-20,-84,-24,20,-11,-36,-70,20,-62,20,20,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,20,-59,20,-63,]),'LE':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,58,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,58,-34,-61,-59,]),'RPAREN':([7,20,31,32,44,46,47,73,77,78,81,83,86,87,88,89,90,98,100,101,102,107,109,111,113,116,117,118,119,],[-65,-25,-85,-27,-26,-66,-64,-71,-36,98,-86,-62,-60,-38,-35,-37,-39,-34,-14,-15,110,-61,-86,-59,-13,120,-30,-31,-33,]),'SEMI':([7,8,13,20,26,27,31,32,33,34,44,45,46,47,73,77,82,83,86,87,88,89,90,91,94,98,99,106,107,110,111,112,],[-65,-41,-40,-25,74,-42,-85,-27,79,-36,-26,-32,-66,-64,-71,-36,103,-62,-60,-38,-35,-37,-39,-23,108,-34,-21,-22,-61,-16,-59,114,]),'UNSIGNED':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,22,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,22,-24,22,-11,-36,-70,22,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,22,-59,-63,]),'LONG':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,23,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,23,-24,23,-11,-36,-70,23,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,23,-59,-63,]),'LT':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,57,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,57,-34,-61,-59,]),'PLUS':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,59,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,59,-34,-61,-59,]),'COMMA':([31,73,100,],[-85,-71,109,]),'TIMESEQUALS':([16,31,33,43,73,83,86,92,95,96,107,111,],[70,-85,70,70,-71,-62,-60,70,70,70,-61,-59,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,74,77,79,83,86,87,88,89,90,97,98,103,104,107,111,121,],[-86,-1,-2,0,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,-24,-36,-70,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-59,-63,]),'GT':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,50,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,50,-34,-61,-59,]),'RBRACE':([4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,74,75,76,77,79,83,86,87,88,89,90,97,98,103,104,107,111,121,],[-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,-24,97,-11,-36,-70,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-59,-63,]),'FOR':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,74,75,76,77,79,83,86,87,88,89,90,97,98,103,104,107,111,121,],[-86,21,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,-24,21,-11,-36,-70,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-59,-63,]),'PLUSPLUS':([7,20,31,32,44,46,47,83,86,107,111,115,],[-65,-25,-85,-27,-26,-66,-64,-62,-60,-61,-59,117,]),'EQUALS':([16,31,33,43,73,83,86,92,95,96,107,111,],[66,-85,66,66,-71,-62,-60,66,66,66,-61,-59,]),'TIMES':([6,7,9,10,12,13,14,16,17,20,22,23,31,32,34,37,39,40,41,42,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-76,-65,-74,-72,56,-35,-75,-66,71,-25,-82,-78,-85,-27,-36,-77,-79,-81,-80,-73,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,56,-34,-61,-59,]),'PLUSEQUALS':([16,31,33,43,73,83,86,92,95,96,107,111,],[67,-85,67,67,-71,-62,-60,67,67,67,-61,-59,]),'GE':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,55,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,55,-34,-61,-59,]),'LPAREN':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,108,111,121,],[-86,29,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,72,-82,-78,-5,-10,-42,-86,29,-6,-85,-27,81,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-48,-47,-54,-50,29,-51,-52,-56,29,-53,-55,-44,-49,-46,-57,-45,-58,29,-17,-18,29,-19,-20,-84,-71,-24,29,-11,-36,-70,29,-62,29,29,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,29,-59,-63,]),'MINUSMINUS':([7,20,31,32,44,46,47,83,86,107,111,115,],[-65,-25,-85,-27,-26,-66,-64,-62,-60,-61,-59,118,]),'EQ':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,62,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,62,-34,-61,-59,]),'ID':([0,1,2,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,83,84,85,86,87,88,89,90,93,97,98,103,104,107,108,111,114,121,],[-86,31,-11,-3,31,-76,-65,-41,-74,-72,-7,-40,-75,-29,-66,-83,-28,-12,-25,-82,-78,31,-10,-42,-86,31,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-48,-47,-54,-50,31,-51,-52,-56,31,-53,-55,-44,-49,-46,-57,-45,-58,31,-17,-18,31,-19,-20,-84,31,-24,31,-11,-36,-70,31,-62,31,31,-60,-38,-35,-37,-39,31,-67,-34,-68,-69,-61,31,-59,31,-63,]),'AND':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,48,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,48,-34,-61,-59,]),'LBRACKET':([31,43,47,86,96,111,],[-85,84,84,84,84,-59,]),'LBRACE':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,74,75,76,77,79,82,83,86,87,88,89,90,97,98,103,104,107,110,111,120,121,],[-86,28,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,-24,28,-11,-36,-70,28,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,-16,-59,28,-63,]),'STRING_LITERAL':([0,1,2,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,83,84,85,86,87,88,89,90,97,98,103,104,107,108,111,114,121,],[-86,32,-11,-3,32,-76,-65,-41,-74,-72,-7,-40,-75,-29,-66,-83,-28,-12,-25,-82,-78,-5,-10,-42,-86,32,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-48,-47,-54,-50,32,-51,-52,-56,32,-53,-55,-44,-49,-46,-57,-45,-58,32,-17,-18,32,-19,-20,-84,-24,32,-11,-36,-70,32,-62,32,32,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,32,-59,32,-63,]),'LOGAND':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,54,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,54,-34,-61,-59,]),'INT':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,37,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,37,-24,37,-11,-36,-70,37,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,37,-59,-63,]),'DOUBLE':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,41,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,41,-24,41,-11,-36,-70,41,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,41,-59,-63,]),'FLOAT':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,39,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,39,-24,39,-11,-36,-70,39,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,39,-59,-63,]),'SIGNED':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,40,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,40,-24,40,-11,-36,-70,40,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,40,-59,-63,]),'MINUSEQUALS':([16,31,33,43,73,83,86,92,95,96,107,111,],[69,-85,69,69,-71,-62,-60,69,69,69,-61,-59,]),'SIZE_T':([0,1,2,4,6,7,8,9,10,11,13,14,16,17,19,20,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,71,72,74,75,76,77,79,81,83,86,87,88,89,90,97,98,103,104,107,109,111,121,],[-86,42,-11,-3,-76,-65,-41,-74,-72,-7,-40,-75,-66,-83,-12,-25,-82,-78,-5,-10,-42,-86,-6,-85,-27,-36,-8,-4,-77,-9,-79,-81,-80,-73,-64,-26,-32,-66,-64,-84,42,-24,42,-11,-36,-70,42,-62,-60,-38,-35,-37,-39,-67,-34,-68,-69,-61,42,-59,-63,]),'RBRACKET':([7,8,13,20,27,31,32,34,44,45,46,47,77,83,86,87,88,89,90,98,105,107,111,],[-65,-41,-40,-25,-42,-85,-27,-36,-26,-32,-66,-64,-36,-62,-60,-38,-35,-37,-39,-34,111,-61,-59,]),'OR':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,49,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,49,-34,-61,-59,]),'MOD':([7,12,13,16,20,31,32,34,43,44,46,47,77,78,83,86,87,88,89,90,98,107,111,],[-65,61,-35,-66,-25,-85,-27,-36,-64,-26,-66,-64,-36,-35,-62,-60,-38,-35,-37,61,-34,-61,-59,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([1,75,],[4,4,]),'unary_token_before':([1,68,75,80,84,85,],[5,5,5,5,5,5,]),'constant':([1,5,29,52,56,65,68,75,80,84,85,108,114,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'unary_expression':([1,68,75,80,84,85,],[8,8,8,8,8,8,]),'declaration':([1,75,],[30,30,]),'binop_paren':([1,29,52,56,65,68,75,80,84,85,108,],[12,12,87,89,90,12,12,12,12,12,12,]),'unary_token_after':([115,],[119,]),'binop_expression':([1,29,52,56,65,68,75,80,84,85,108,],[13,78,88,88,88,13,13,13,13,13,13,]),'increment':([114,],[116,]),'native_type':([1,72,75,81,109,],[17,17,17,17,17,]),'arglist':([33,],[82,]),'binary_token':([12,87,89,90,],[65,65,65,65,]),'array_reference':([1,5,29,52,56,65,68,72,75,80,84,85,108,114,],[16,46,46,46,46,46,46,92,16,46,46,46,46,46,]),'subscript':([43,47,86,96,],[86,86,86,86,]),'arg_params':([81,109,],[102,113,]),'type':([1,72,75,81,109,],[24,93,24,93,93,]),'empty':([0,28,81,109,],[2,76,101,101,]),'for_loop':([1,75,],[25,25,]),'assignment_expression':([1,72,75,],[26,94,26,]),'beginning_list':([0,28,],[1,75,]),'binop':([1,68,75,80,84,85,108,],[27,27,27,27,27,27,112,]),'compound':([1,75,82,120,],[11,11,104,121,]),'typeid':([1,72,75,81,109,],[33,95,33,100,100,]),'term':([1,5,29,52,56,65,68,75,80,84,85,108,114,],[34,45,77,77,77,77,34,34,34,34,34,77,115,]),'assignment_expression_semi':([1,75,],[35,35,]),'subscript_list':([43,47,86,96,],[83,83,107,83,]),'function_declaration':([1,75,],[36,36,]),'expr':([1,68,75,80,84,85,],[38,91,38,99,105,106,]),'assignment_operator':([16,33,43,92,95,96,],[68,80,85,68,80,85,]),'identifier':([1,5,24,29,52,56,65,68,72,75,80,84,85,93,108,114,],[43,47,73,47,47,47,47,47,96,43,47,47,47,73,47,47,]),'first':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> first","S'",1,None,None,None),
  ('first -> beginning_list','first',1,'p_first','lan_parser.py',14),
  ('first -> empty','first',1,'p_first','lan_parser.py',15),
  ('beginning_list -> beginning_list comment','beginning_list',2,'p_beginning_list','lan_parser.py',22),
  ('beginning_list -> beginning_list function_declaration','beginning_list',2,'p_beginning_list','lan_parser.py',23),
  ('beginning_list -> beginning_list type','beginning_list',2,'p_beginning_list','lan_parser.py',24),
  ('beginning_list -> beginning_list declaration','beginning_list',2,'p_beginning_list','lan_parser.py',25),
  ('beginning_list -> beginning_list compound','beginning_list',2,'p_beginning_list','lan_parser.py',26),
  ('beginning_list -> beginning_list assignment_expression_semi','beginning_list',2,'p_beginning_list','lan_parser.py',27),
  ('beginning_list -> beginning_list expr','beginning_list',2,'p_beginning_list','lan_parser.py',28),
  ('beginning_list -> beginning_list for_loop','beginning_list',2,'p_beginning_list','lan_parser.py',29),
  ('beginning_list -> empty','beginning_list',1,'p_beginning_list','lan_parser.py',30),
  ('comment -> COMMENT','comment',1,'p_comment','lan_parser.py',42),
  ('arg_params -> typeid COMMA arg_params','arg_params',3,'p_arg_params','lan_parser.py',48),
  ('arg_params -> typeid','arg_params',1,'p_arg_params','lan_parser.py',49),
  ('arg_params -> empty','arg_params',1,'p_arg_params','lan_parser.py',50),
  ('arglist -> LPAREN arg_params RPAREN','arglist',3,'p_arglist','lan_parser.py',58),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',62),
  ('assignment_operator -> PLUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',63),
  ('assignment_operator -> MINUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',64),
  ('assignment_operator -> TIMESEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',65),
  ('assignment_expression -> typeid assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',70),
  ('assignment_expression -> identifier assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',71),
  ('assignment_expression -> array_reference assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',72),
  ('assignment_expression_semi -> assignment_expression SEMI','assignment_expression_semi',2,'p_assignment_expression_semi','lan_parser.py',77),
  ('constant -> INT_CONST','constant',1,'p_constant','lan_parser.py',82),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','lan_parser.py',83),
  ('constant -> STRING_LITERAL','constant',1,'p_constant','lan_parser.py',84),
  ('unary_token_before -> MINUS','unary_token_before',1,'p_unary_token_before','lan_parser.py',89),
  ('unary_token_before -> LOGNOT','unary_token_before',1,'p_unary_token_before','lan_parser.py',90),
  ('unary_token_after -> PLUSPLUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',95),
  ('unary_token_after -> MINUSMINUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',96),
  ('unary_expression -> unary_token_before term','unary_expression',2,'p_unary_expression','lan_parser.py',101),
  ('increment -> term unary_token_after','increment',2,'p_increment','lan_parser.py',105),
  ('binop_paren -> LPAREN binop_expression RPAREN','binop_paren',3,'p_binop_paren','lan_parser.py',110),
  ('binop_paren -> binop_expression','binop_paren',1,'p_binop_paren','lan_parser.py',111),
  ('binop_expression -> term','binop_expression',1,'p_binop_expression','lan_parser.py',119),
  ('binop_expression -> binop_paren TIMES binop_paren','binop_expression',3,'p_binop_expression','lan_parser.py',120),
  ('binop_expression -> binop_paren DIVIDE binop_paren','binop_expression',3,'p_binop_expression','lan_parser.py',121),
  ('binop_expression -> binop_paren binary_token binop_paren','binop_expression',3,'p_binop_expression','lan_parser.py',122),
  ('binop -> binop_expression','binop',1,'p_binop','lan_parser.py',129),
  ('expr -> unary_expression','expr',1,'p_expr','lan_parser.py',137),
  ('expr -> binop','expr',1,'p_expr','lan_parser.py',138),
  ('expr -> term','expr',1,'p_expr','lan_parser.py',139),
  ('binary_token -> PLUS','binary_token',1,'p_binary_token','lan_parser.py',145),
  ('binary_token -> MINUS','binary_token',1,'p_binary_token','lan_parser.py',146),
  ('binary_token -> MOD','binary_token',1,'p_binary_token','lan_parser.py',147),
  ('binary_token -> OR','binary_token',1,'p_binary_token','lan_parser.py',148),
  ('binary_token -> AND','binary_token',1,'p_binary_token','lan_parser.py',149),
  ('binary_token -> LSHIFT','binary_token',1,'p_binary_token','lan_parser.py',150),
  ('binary_token -> RSHIFT','binary_token',1,'p_binary_token','lan_parser.py',151),
  ('binary_token -> LOGOR','binary_token',1,'p_binary_token','lan_parser.py',152),
  ('binary_token -> LOGAND','binary_token',1,'p_binary_token','lan_parser.py',153),
  ('binary_token -> LT','binary_token',1,'p_binary_token','lan_parser.py',154),
  ('binary_token -> GT','binary_token',1,'p_binary_token','lan_parser.py',155),
  ('binary_token -> LE','binary_token',1,'p_binary_token','lan_parser.py',156),
  ('binary_token -> GE','binary_token',1,'p_binary_token','lan_parser.py',157),
  ('binary_token -> EQ','binary_token',1,'p_binary_token','lan_parser.py',158),
  ('binary_token -> NE','binary_token',1,'p_binary_token','lan_parser.py',159),
  ('subscript -> LBRACKET expr RBRACKET','subscript',3,'p_subscript','lan_parser.py',165),
  ('subscript_list -> subscript','subscript_list',1,'p_subscript_list','lan_parser.py',169),
  ('subscript_list -> subscript subscript_list','subscript_list',2,'p_subscript_list','lan_parser.py',170),
  ('array_reference -> identifier subscript_list','array_reference',2,'p_array_reference','lan_parser.py',178),
  ('for_loop -> FOR LPAREN assignment_expression SEMI binop SEMI increment RPAREN compound','for_loop',9,'p_for_loop','lan_parser.py',184),
  ('term -> identifier','term',1,'p_term','lan_parser.py',191),
  ('term -> constant','term',1,'p_term','lan_parser.py',192),
  ('term -> array_reference','term',1,'p_term','lan_parser.py',193),
  ('compound -> LBRACE beginning_list RBRACE','compound',3,'p_compound','lan_parser.py',199),
  ('function_declaration -> typeid arglist SEMI','function_declaration',3,'p_func_decl_1','lan_parser.py',203),
  ('function_declaration -> typeid arglist compound','function_declaration',3,'p_func_decl_2','lan_parser.py',207),
  ('declaration -> typeid SEMI','declaration',2,'p_decl','lan_parser.py',211),
  ('typeid -> type identifier','typeid',2,'p_typeid','lan_parser.py',215),
  ('native_type -> VOID','native_type',1,'p_native_type','lan_parser.py',220),
  ('native_type -> SIZE_T','native_type',1,'p_native_type','lan_parser.py',221),
  ('native_type -> UNKNOWN','native_type',1,'p_native_type','lan_parser.py',222),
  ('native_type -> CHAR','native_type',1,'p_native_type','lan_parser.py',223),
  ('native_type -> SHORT','native_type',1,'p_native_type','lan_parser.py',224),
  ('native_type -> INT','native_type',1,'p_native_type','lan_parser.py',225),
  ('native_type -> LONG','native_type',1,'p_native_type','lan_parser.py',226),
  ('native_type -> FLOAT','native_type',1,'p_native_type','lan_parser.py',227),
  ('native_type -> DOUBLE','native_type',1,'p_native_type','lan_parser.py',228),
  ('native_type -> SIGNED','native_type',1,'p_native_type','lan_parser.py',229),
  ('native_type -> UNSIGNED','native_type',1,'p_native_type','lan_parser.py',230),
  ('type -> native_type','type',1,'p_type','lan_parser.py',235),
  ('type -> native_type TIMES','type',2,'p_type','lan_parser.py',236),
  ('identifier -> ID','identifier',1,'p_identifier','lan_parser.py',243),
  ('empty -> <empty>','empty',0,'p_empty','lan_parser.py',249),
]
