
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd8\x84E\xfcn u\xa1\xb62\xfeB\x01\x86\x12='
    
_lr_action_items = {'LOGOR':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,64,-86,-28,-32,-60,-59,-63,-62,-60,-31,64,-66,-53,-51,64,64,64,64,-33,64,64,64,-34,64,64,-35,64,64,-36,64,64,-30,64,-60,-52,-17,-50,64,]),'SHORT':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,5,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,5,-25,5,-70,5,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,5,-50,-54,]),'RSHIFT':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,62,-86,-28,-32,-60,-59,-63,-62,-60,-31,62,-66,-53,-51,62,62,62,62,-33,62,62,62,-34,62,62,-35,62,62,-36,62,62,-30,62,-60,-52,-17,-50,62,]),'UNKNOWN':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,8,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,8,-25,8,-70,8,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,8,-50,-54,]),'VOID':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,9,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,9,-25,9,-70,9,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,9,-50,-54,]),'NE':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,74,-86,-28,-32,-60,-59,-63,-62,-60,-31,74,-66,-53,-51,74,74,74,74,-33,74,74,74,-34,74,74,-35,74,74,-36,74,74,-30,74,-60,-52,-17,-50,74,]),'CHAR':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,13,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,13,-25,13,-70,13,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,13,-50,-54,]),'LOGNOT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,130,137,],[-87,14,-10,-2,-76,-64,14,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,-4,-9,-83,-87,14,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,14,-20,-21,-85,-25,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-70,14,14,-66,-53,14,14,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,14,-17,14,-50,14,-54,]),'FLOAT_CONST':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,130,137,],[-87,22,-10,-2,-76,-64,22,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,-4,-9,-83,-87,22,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,22,-20,-21,-85,-25,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-70,22,22,-66,-53,22,22,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,22,-17,22,-50,22,-54,]),'LSHIFT':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,71,-86,-28,-32,-60,-59,-63,-62,-60,-31,71,-66,-53,-51,71,71,71,71,-33,71,71,71,-34,71,71,-35,71,71,-36,71,71,-30,71,-60,-52,-17,-50,71,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,118,119,120,123,124,125,126,127,128,130,137,],[-87,18,-10,-2,-76,-64,18,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,-4,-9,73,-87,18,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,18,-20,-21,-85,-25,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-31,73,-70,18,18,-66,-53,18,18,-51,73,73,73,73,-33,73,73,73,-34,73,73,-35,73,73,-36,73,73,-65,-30,73,-60,-67,-68,-52,18,-17,18,-50,73,18,-54,]),'DIVIDE':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,63,-86,-28,-32,-60,-59,-63,-62,-60,-31,63,-66,-53,-51,63,63,63,63,-33,63,63,63,-34,63,63,63,63,63,63,63,63,-30,63,-60,-52,-17,-50,63,]),'COMMENT':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,76,79,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,127,137,],[-87,19,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,-25,19,-70,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,-50,-54,]),'INT_CONST':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,130,137,],[-87,20,-10,-2,-76,-64,20,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,-4,-9,-83,-87,20,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,20,-20,-21,-85,-25,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-70,20,20,-66,-53,20,20,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,20,-17,20,-50,20,-54,]),'LE':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,69,-86,-28,-32,-60,-59,-63,-62,-60,-31,69,-66,-53,-51,69,69,69,69,-33,69,69,69,-34,69,69,-35,69,69,-36,69,69,-30,69,-60,-52,-17,-50,69,]),'RPAREN':([6,12,17,20,22,32,33,35,45,46,47,48,57,77,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,114,115,116,117,118,123,125,126,127,129,131,134,135,136,],[-64,-31,-61,-26,-27,-86,-28,-32,-59,-63,-62,-60,-71,112,-87,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-30,125,-16,-15,-13,-14,-52,-17,-87,-50,-12,133,-57,-58,-29,]),'SEMI':([6,11,12,17,20,22,27,28,32,33,34,35,45,46,47,48,57,82,83,84,87,88,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,122,123,125,127,128,],[-64,49,-31,-61,-26,-27,58,-83,-86,-28,79,-32,-59,-63,-62,-60,-71,119,-66,-53,-51,-24,124,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-30,-22,-23,-52,-17,-50,130,]),'UNSIGNED':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,23,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,23,-25,23,-70,23,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,23,-50,-54,]),'LONG':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,24,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,24,-25,24,-70,24,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,24,-50,-54,]),'LT':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,68,-86,-28,-32,-60,-59,-63,-62,-60,-31,68,-66,-53,-51,68,68,68,68,-33,68,68,68,-34,68,68,-35,68,68,-36,68,68,-30,68,-60,-52,-17,-50,68,]),'PLUS':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,70,-86,-28,-32,-60,-59,-63,-62,-60,-31,70,-66,-53,-51,70,70,70,70,-33,70,70,70,-34,70,70,-35,70,70,-36,70,70,-30,70,-60,-52,-17,-50,70,]),'COMMA':([32,57,117,],[-86,-71,126,]),'TIMESEQUALS':([15,32,34,44,57,84,87,89,92,93,123,127,],[54,-86,54,54,-71,-53,-51,54,54,54,-52,-50,]),'$end':([0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,79,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,127,137,],[-87,-1,-10,0,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,-25,-70,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,-50,-54,]),'GT':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,61,-86,-28,-32,-60,-59,-63,-62,-60,-31,61,-66,-53,-51,61,61,61,61,-33,61,61,61,-34,61,61,-35,61,61,-36,61,61,-30,61,-60,-52,-17,-50,61,]),'RBRACE':([2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,76,79,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,127,137,],[-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,-25,111,-70,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,-50,-54,]),'FOR':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,76,79,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,127,137,],[-87,21,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,-25,21,-70,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,-50,-54,]),'PLUSPLUS':([6,17,20,22,32,33,45,46,47,48,83,84,87,123,125,127,132,],[-64,-61,-26,-27,-86,-28,-59,-63,-62,-60,-66,-53,-51,-52,-17,-50,134,]),'EQUALS':([15,32,34,44,57,84,87,89,92,93,123,127,],[50,-86,50,50,-71,-53,-51,50,50,50,-52,-50,]),'TIMES':([5,6,8,9,11,12,13,15,16,17,20,22,23,24,28,32,33,35,38,40,41,42,43,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-76,-64,-74,-72,-63,-31,-75,-62,55,-61,-26,-27,-82,-78,67,-86,-28,-32,-77,-79,-81,-80,-73,-60,-59,-63,-62,-60,-31,67,-66,-53,-51,67,67,67,67,-33,67,67,67,-34,67,67,67,67,67,67,67,67,-30,67,-60,-52,-17,-50,67,]),'PLUSEQUALS':([15,32,34,44,57,84,87,89,92,93,123,127,],[51,-86,51,51,-71,-53,-51,51,51,51,-52,-50,]),'GE':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,66,-86,-28,-32,-60,-59,-63,-62,-60,-31,66,-66,-53,-51,66,66,66,66,-33,66,66,66,-34,66,66,-35,66,66,-36,66,66,-30,66,-60,-52,-17,-50,66,]),'LPAREN':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,118,119,120,123,124,125,126,127,137,],[-87,30,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,56,-27,-82,-78,-4,-9,-83,-87,30,-5,-86,-28,81,-32,-7,-3,-77,-8,-79,-81,-80,-73,81,-59,-63,-62,81,-69,-18,-19,30,-20,-21,-85,-71,-25,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-70,30,30,-66,-53,30,30,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,81,-67,-68,-52,30,-17,30,-50,-54,]),'MINUSMINUS':([6,17,20,22,32,33,45,46,47,48,83,84,87,123,125,127,132,],[-64,-61,-26,-27,-86,-28,-59,-63,-62,-60,-66,-53,-51,-52,-17,-50,135,]),'EQ':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,72,-86,-28,-32,-60,-59,-63,-62,-60,-31,72,-66,-53,-51,72,72,72,72,-33,72,72,72,-34,72,72,-35,72,72,-36,72,72,-30,72,-60,-52,-17,-50,72,]),'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,90,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,130,137,],[-87,32,-10,-2,-76,-64,32,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,32,-9,-83,-87,32,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,32,-20,-21,-85,32,-25,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-70,32,32,-66,-53,32,32,-51,32,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,32,-17,32,-50,32,-54,]),'AND':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,59,-86,-28,-32,-60,-59,-63,-62,-60,-31,59,-66,-53,-51,59,59,59,59,-33,59,59,59,-34,59,59,-35,59,59,-36,59,59,-30,59,-60,-52,-17,-50,59,]),'LBRACKET':([32,44,48,87,93,118,127,],[-86,85,85,85,85,85,-50,]),'LBRACE':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,58,76,79,82,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,127,133,137,],[-87,29,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,-25,29,-70,29,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,-50,29,-54,]),'STRING_LITERAL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,130,137,],[-87,33,-10,-2,-76,-64,33,-74,-72,-6,-63,-31,-75,-56,-62,-84,-61,-55,-11,-26,-27,-82,-78,-4,-9,-83,-87,33,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-18,-19,33,-20,-21,-85,-25,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-70,33,33,-66,-53,33,33,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,33,-17,33,-50,33,-54,]),'LOGAND':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,65,-86,-28,-32,-60,-59,-63,-62,-60,-31,65,-66,-53,-51,65,65,65,65,-33,65,65,65,-34,65,65,-35,65,65,-36,65,65,-30,65,-60,-52,-17,-50,65,]),'INT':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,38,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,38,-25,38,-70,38,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,38,-50,-54,]),'DOUBLE':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,42,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,42,-25,42,-70,42,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,42,-50,-54,]),'FLOAT':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,40,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,40,-25,40,-70,40,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,40,-50,-54,]),'SIGNED':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,41,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,41,-25,41,-70,41,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,41,-50,-54,]),'MINUSEQUALS':([15,32,34,44,57,84,87,89,92,93,123,127,],[53,-86,53,53,-71,-53,-51,53,53,53,-52,-50,]),'SIZE_T':([0,1,2,4,5,6,8,9,10,11,12,13,15,16,17,19,20,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,58,76,79,81,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,119,120,123,125,126,127,137,],[-87,43,-10,-2,-76,-64,-74,-72,-6,-63,-31,-75,-62,-84,-61,-11,-26,-27,-82,-78,-4,-9,-83,-87,-5,-86,-28,-32,-7,-3,-77,-8,-79,-81,-80,-73,-60,-59,-63,-62,-60,-69,-85,43,-25,43,-70,43,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-65,-30,-67,-68,-52,-17,43,-50,-54,]),'RBRACKET':([6,12,17,20,22,28,32,33,35,45,46,47,48,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,121,123,125,127,],[-64,-31,-61,-26,-27,-83,-86,-28,-32,-59,-63,-62,-60,-66,-53,-51,-39,-38,-45,-41,-33,-42,-43,-47,-34,-44,-46,-35,-40,-48,-36,-49,-37,-30,127,-52,-17,-50,]),'OR':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,60,-86,-28,-32,-60,-59,-63,-62,-60,-31,60,-66,-53,-51,60,60,60,60,-33,60,60,60,-34,60,60,-35,60,60,-36,60,60,-30,60,-60,-52,-17,-50,60,]),'MOD':([6,11,12,15,17,20,22,28,32,33,35,44,45,46,47,48,77,78,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,116,118,123,125,127,128,],[-64,-63,-31,-62,-61,-26,-27,75,-86,-28,-32,-60,-59,-63,-62,-60,-31,75,-66,-53,-51,75,75,75,75,-33,75,75,75,-34,75,75,-35,75,75,-36,75,75,-30,75,-60,-52,-17,-50,75,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([1,76,],[4,4,]),'unary_token_before':([1,7,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constant':([1,7,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'unary_expression':([1,7,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'declaration':([1,76,],[31,31,]),'unary_token_after':([132,],[136,]),'function_call':([1,7,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[11,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,11,46,46,46,46,46,46,46,]),'binop_expression':([1,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,],[12,77,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'increment':([130,],[131,]),'native_type':([1,56,76,81,126,],[16,16,16,16,16,]),'arglist':([34,44,48,118,],[82,83,83,83,]),'arg_params':([81,126,],[114,129,]),'array_reference':([1,7,30,52,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[15,47,47,47,89,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,15,47,47,47,47,47,47,47,]),'subscript':([44,48,87,93,118,],[87,87,87,87,87,]),'type':([1,56,76,81,126,],[25,90,25,90,90,]),'empty':([0,29,81,126,],[2,2,115,115,]),'for_loop':([1,76,],[26,26,]),'assignment_expression':([1,56,76,],[27,91,27,]),'beginning_list':([0,29,],[1,76,]),'binop':([1,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,],[28,78,28,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,28,28,116,28,28,128,116,]),'compound':([1,76,82,133,],[10,10,120,137,]),'typeid':([1,56,76,81,126,],[34,92,34,117,117,]),'term':([1,7,30,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,124,126,130,],[35,45,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,132,]),'assignment_expression_semi':([1,76,],[36,36,]),'subscript_list':([44,48,87,93,118,],[84,84,123,84,84,]),'function_declaration':([1,76,],[37,37,]),'expr':([1,52,76,80,85,86,],[39,88,39,113,121,122,]),'assignment_operator':([15,34,44,89,92,93,],[52,80,86,52,80,86,]),'identifier':([1,7,25,30,52,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,90,124,126,130,],[44,48,57,48,48,93,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,44,48,118,48,48,57,48,118,48,]),'first':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> first","S'",1,None,None,None),
  ('first -> beginning_list','first',1,'p_first','lan_parser.py',14),
  ('beginning_list -> beginning_list comment','beginning_list',2,'p_beginning_list','lan_parser.py',21),
  ('beginning_list -> beginning_list function_declaration','beginning_list',2,'p_beginning_list','lan_parser.py',22),
  ('beginning_list -> beginning_list type','beginning_list',2,'p_beginning_list','lan_parser.py',23),
  ('beginning_list -> beginning_list declaration','beginning_list',2,'p_beginning_list','lan_parser.py',24),
  ('beginning_list -> beginning_list compound','beginning_list',2,'p_beginning_list','lan_parser.py',25),
  ('beginning_list -> beginning_list assignment_expression_semi','beginning_list',2,'p_beginning_list','lan_parser.py',26),
  ('beginning_list -> beginning_list expr','beginning_list',2,'p_beginning_list','lan_parser.py',27),
  ('beginning_list -> beginning_list for_loop','beginning_list',2,'p_beginning_list','lan_parser.py',28),
  ('beginning_list -> empty','beginning_list',1,'p_beginning_list','lan_parser.py',29),
  ('comment -> COMMENT','comment',1,'p_comment','lan_parser.py',39),
  ('arg_params -> typeid COMMA arg_params','arg_params',3,'p_arg_params','lan_parser.py',45),
  ('arg_params -> typeid','arg_params',1,'p_arg_params','lan_parser.py',46),
  ('arg_params -> identifier','arg_params',1,'p_arg_params','lan_parser.py',47),
  ('arg_params -> binop','arg_params',1,'p_arg_params','lan_parser.py',48),
  ('arg_params -> empty','arg_params',1,'p_arg_params','lan_parser.py',49),
  ('arglist -> LPAREN arg_params RPAREN','arglist',3,'p_arglist','lan_parser.py',57),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',61),
  ('assignment_operator -> PLUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',62),
  ('assignment_operator -> MINUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',63),
  ('assignment_operator -> TIMESEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',64),
  ('assignment_expression -> typeid assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',69),
  ('assignment_expression -> identifier assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',70),
  ('assignment_expression -> array_reference assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',71),
  ('assignment_expression_semi -> assignment_expression SEMI','assignment_expression_semi',2,'p_assignment_expression_semi','lan_parser.py',76),
  ('constant -> INT_CONST','constant',1,'p_constant','lan_parser.py',81),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','lan_parser.py',82),
  ('constant -> STRING_LITERAL','constant',1,'p_constant','lan_parser.py',83),
  ('increment -> term unary_token_after','increment',2,'p_increment','lan_parser.py',88),
  ('binop -> LPAREN binop_expression RPAREN','binop',3,'p_binop_paren','lan_parser.py',94),
  ('binop -> binop_expression','binop',1,'p_binop_paren','lan_parser.py',95),
  ('binop_expression -> term','binop_expression',1,'p_binop_expression','lan_parser.py',104),
  ('binop_expression -> binop DIVIDE binop','binop_expression',3,'p_binop_expression','lan_parser.py',105),
  ('binop_expression -> binop TIMES binop','binop_expression',3,'p_binop_expression','lan_parser.py',106),
  ('binop_expression -> binop PLUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',107),
  ('binop_expression -> binop MINUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',108),
  ('binop_expression -> binop MOD binop','binop_expression',3,'p_binop_expression','lan_parser.py',109),
  ('binop_expression -> binop OR binop','binop_expression',3,'p_binop_expression','lan_parser.py',110),
  ('binop_expression -> binop AND binop','binop_expression',3,'p_binop_expression','lan_parser.py',111),
  ('binop_expression -> binop LSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',112),
  ('binop_expression -> binop RSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',113),
  ('binop_expression -> binop LOGOR binop','binop_expression',3,'p_binop_expression','lan_parser.py',114),
  ('binop_expression -> binop LOGAND binop','binop_expression',3,'p_binop_expression','lan_parser.py',115),
  ('binop_expression -> binop LT binop','binop_expression',3,'p_binop_expression','lan_parser.py',116),
  ('binop_expression -> binop GT binop','binop_expression',3,'p_binop_expression','lan_parser.py',117),
  ('binop_expression -> binop LE binop','binop_expression',3,'p_binop_expression','lan_parser.py',118),
  ('binop_expression -> binop GE binop','binop_expression',3,'p_binop_expression','lan_parser.py',119),
  ('binop_expression -> binop EQ binop','binop_expression',3,'p_binop_expression','lan_parser.py',120),
  ('binop_expression -> binop NE binop','binop_expression',3,'p_binop_expression','lan_parser.py',121),
  ('subscript -> LBRACKET expr RBRACKET','subscript',3,'p_subscript','lan_parser.py',133),
  ('subscript_list -> subscript','subscript_list',1,'p_subscript_list','lan_parser.py',137),
  ('subscript_list -> subscript subscript_list','subscript_list',2,'p_subscript_list','lan_parser.py',138),
  ('array_reference -> identifier subscript_list','array_reference',2,'p_array_reference','lan_parser.py',146),
  ('for_loop -> FOR LPAREN assignment_expression SEMI binop SEMI increment RPAREN compound','for_loop',9,'p_for_loop','lan_parser.py',152),
  ('unary_token_before -> MINUS','unary_token_before',1,'p_unary_token_before','lan_parser.py',157),
  ('unary_token_before -> LOGNOT','unary_token_before',1,'p_unary_token_before','lan_parser.py',158),
  ('unary_token_after -> PLUSPLUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',163),
  ('unary_token_after -> MINUSMINUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',164),
  ('unary_expression -> unary_token_before term','unary_expression',2,'p_unary_expression','lan_parser.py',169),
  ('term -> identifier','term',1,'p_term','lan_parser.py',175),
  ('term -> constant','term',1,'p_term','lan_parser.py',176),
  ('term -> array_reference','term',1,'p_term','lan_parser.py',177),
  ('term -> function_call','term',1,'p_term','lan_parser.py',178),
  ('term -> unary_expression','term',1,'p_term','lan_parser.py',179),
  ('compound -> LBRACE beginning_list RBRACE','compound',3,'p_compound','lan_parser.py',185),
  ('function_call -> identifier arglist','function_call',2,'p_func_call','lan_parser.py',189),
  ('function_declaration -> typeid arglist SEMI','function_declaration',3,'p_func_decl_1','lan_parser.py',193),
  ('function_declaration -> typeid arglist compound','function_declaration',3,'p_func_decl_2','lan_parser.py',197),
  ('function_declaration -> function_call SEMI','function_declaration',2,'p_func_decl_3','lan_parser.py',201),
  ('declaration -> typeid SEMI','declaration',2,'p_decl','lan_parser.py',208),
  ('typeid -> type identifier','typeid',2,'p_typeid','lan_parser.py',212),
  ('native_type -> VOID','native_type',1,'p_native_type','lan_parser.py',217),
  ('native_type -> SIZE_T','native_type',1,'p_native_type','lan_parser.py',218),
  ('native_type -> UNKNOWN','native_type',1,'p_native_type','lan_parser.py',219),
  ('native_type -> CHAR','native_type',1,'p_native_type','lan_parser.py',220),
  ('native_type -> SHORT','native_type',1,'p_native_type','lan_parser.py',221),
  ('native_type -> INT','native_type',1,'p_native_type','lan_parser.py',222),
  ('native_type -> LONG','native_type',1,'p_native_type','lan_parser.py',223),
  ('native_type -> FLOAT','native_type',1,'p_native_type','lan_parser.py',224),
  ('native_type -> DOUBLE','native_type',1,'p_native_type','lan_parser.py',225),
  ('native_type -> SIGNED','native_type',1,'p_native_type','lan_parser.py',226),
  ('native_type -> UNSIGNED','native_type',1,'p_native_type','lan_parser.py',227),
  ('expr -> binop','expr',1,'p_expr','lan_parser.py',232),
  ('type -> native_type','type',1,'p_type','lan_parser.py',238),
  ('type -> native_type TIMES','type',2,'p_type','lan_parser.py',239),
  ('identifier -> ID','identifier',1,'p_identifier','lan_parser.py',246),
  ('empty -> <empty>','empty',0,'p_empty','lan_parser.py',252),
]
