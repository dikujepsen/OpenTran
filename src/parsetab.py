
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9b\xd2\xda \xce\x96\x7fl5\x1e\xf12`\x13\x04\xf1'
    
_lr_action_items = {'LOGOR':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,61,-81,-26,-30,-58,-57,-60,-58,-29,61,-51,-49,61,61,61,61,-31,61,61,61,-32,61,61,-33,61,61,-34,61,61,-28,-50,-48,61,]),'SHORT':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,5,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,5,-23,5,-65,5,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,5,-48,-52,]),'RSHIFT':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,59,-81,-26,-30,-58,-57,-60,-58,-29,59,-51,-49,59,59,59,59,-31,59,59,59,-32,59,59,-33,59,59,-34,59,59,-28,-50,-48,59,]),'UNKNOWN':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,8,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,8,-23,8,-65,8,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,8,-48,-52,]),'VOID':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,9,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,9,-23,9,-65,9,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,9,-48,-52,]),'NE':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,71,-81,-26,-30,-58,-57,-60,-58,-29,71,-51,-49,71,71,71,71,-31,71,71,71,-32,71,71,-33,71,71,-34,71,71,-28,-50,-48,71,]),'CHAR':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,12,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,12,-23,12,-65,12,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,12,-48,-52,]),'LOGNOT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,124,131,],[-82,13,-10,-2,-71,-61,13,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,-4,-9,-78,-82,13,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,13,-18,-19,-80,-23,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-65,13,-51,13,13,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,13,-48,13,-52,]),'FLOAT_CONST':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,124,131,],[-82,21,-10,-2,-71,-61,21,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,-4,-9,-78,-82,21,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,21,-18,-19,-80,-23,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-65,21,-51,21,21,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,21,-48,21,-52,]),'LSHIFT':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,68,-81,-26,-30,-58,-57,-60,-58,-29,68,-51,-49,68,68,68,68,-31,68,68,68,-32,68,68,-33,68,68,-34,68,68,-28,-50,-48,68,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,122,124,131,],[-82,17,-10,-2,-71,-61,17,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,-4,-9,70,-82,17,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,17,-18,-19,-80,-23,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-29,70,-65,17,-51,17,17,-49,70,70,70,70,-31,70,70,70,-32,70,70,-33,70,70,-34,70,70,-62,-28,-63,-64,-50,17,-48,70,17,-52,]),'DIVIDE':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,60,-81,-26,-30,-58,-57,-60,-58,-29,60,-51,-49,60,60,60,60,-31,60,60,60,-32,60,60,60,60,60,60,60,60,-28,-50,-48,60,]),'COMMENT':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,55,73,76,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,121,131,],[-82,18,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,-23,18,-65,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,-48,-52,]),'INT_CONST':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,124,131,],[-82,19,-10,-2,-71,-61,19,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,-4,-9,-78,-82,19,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,19,-18,-19,-80,-23,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-65,19,-51,19,19,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,19,-48,19,-52,]),'LE':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,66,-81,-26,-30,-58,-57,-60,-58,-29,66,-51,-49,66,66,66,66,-31,66,66,66,-32,66,66,-33,66,66,-34,66,66,-28,-50,-48,66,]),'RPAREN':([6,11,16,19,21,31,32,34,44,45,46,54,74,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,111,112,117,119,121,123,125,128,129,130,],[-61,-29,-59,-24,-25,-81,-26,-30,-57,-60,-58,-66,108,-82,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-28,-13,-14,120,-50,-82,-48,-12,127,-55,-56,-27,]),'SEMI':([6,11,16,19,21,26,27,31,32,33,34,44,45,46,54,79,80,83,84,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,116,117,120,121,122,],[-61,-29,-59,-24,-25,55,-78,-81,-26,76,-30,-57,-60,-58,-66,113,-51,-49,-22,118,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-28,-20,-21,-50,-15,-48,124,]),'UNSIGNED':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,22,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,22,-23,22,-65,22,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,22,-48,-52,]),'LONG':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,23,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,23,-23,23,-65,23,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,23,-48,-52,]),'LT':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,65,-81,-26,-30,-58,-57,-60,-58,-29,65,-51,-49,65,65,65,65,-31,65,65,65,-32,65,65,-33,65,65,-34,65,65,-28,-50,-48,65,]),'PLUS':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,67,-81,-26,-30,-58,-57,-60,-58,-29,67,-51,-49,67,67,67,67,-31,67,67,67,-32,67,67,-33,67,67,-34,67,67,-28,-50,-48,67,]),'COMMA':([31,54,110,],[-81,-66,119,]),'TIMESEQUALS':([14,31,33,43,54,80,83,85,88,89,117,121,],[51,-81,51,51,-66,-51,-49,51,51,51,-50,-48,]),'$end':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,55,76,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,121,131,],[-82,-1,-10,0,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,-23,-65,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,-48,-52,]),'GT':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,58,-81,-26,-30,-58,-57,-60,-58,-29,58,-51,-49,58,58,58,58,-31,58,58,58,-32,58,58,-33,58,58,-34,58,58,-28,-50,-48,58,]),'RBRACE':([2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,55,73,76,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,121,131,],[-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,-23,107,-65,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,-48,-52,]),'FOR':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,55,73,76,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,121,131,],[-82,20,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,-23,20,-65,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,-48,-52,]),'PLUSPLUS':([6,16,19,21,31,32,44,45,46,80,83,117,121,126,],[-61,-59,-24,-25,-81,-26,-57,-60,-58,-51,-49,-50,-48,128,]),'EQUALS':([14,31,33,43,54,80,83,85,88,89,117,121,],[47,-81,47,47,-66,-51,-49,47,47,47,-50,-48,]),'TIMES':([5,6,8,9,11,12,14,15,16,19,21,22,23,27,31,32,34,37,39,40,41,42,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-71,-61,-69,-67,-29,-70,-60,52,-59,-24,-25,-77,-73,64,-81,-26,-30,-72,-74,-76,-75,-68,-58,-57,-60,-58,-29,64,-51,-49,64,64,64,64,-31,64,64,64,-32,64,64,64,64,64,64,64,64,-28,-50,-48,64,]),'PLUSEQUALS':([14,31,33,43,54,80,83,85,88,89,117,121,],[48,-81,48,48,-66,-51,-49,48,48,48,-50,-48,]),'GE':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,63,-81,-26,-30,-58,-57,-60,-58,-29,63,-51,-49,63,63,63,63,-31,63,63,63,-32,63,63,-33,63,63,-34,63,63,-28,-50,-48,63,]),'LPAREN':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,131,],[-82,29,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,53,-25,-77,-73,-4,-9,-78,-82,29,-5,-81,-26,78,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,29,-18,-19,-80,-66,-23,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-65,29,-51,29,29,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,29,-48,-52,]),'MINUSMINUS':([6,16,19,21,31,32,44,45,46,80,83,117,121,126,],[-61,-59,-24,-25,-81,-26,-57,-60,-58,-51,-49,-50,-48,129,]),'EQ':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,69,-81,-26,-30,-58,-57,-60,-58,-29,69,-51,-49,69,69,69,69,-31,69,69,69,-32,69,69,-33,69,69,-34,69,69,-28,-50,-48,69,]),'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,86,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,124,131,],[-82,31,-10,-2,-71,-61,31,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,31,-9,-78,-82,31,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,31,-18,-19,-80,31,-23,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-65,31,-51,31,31,-49,31,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,31,-48,31,-52,]),'AND':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,56,-81,-26,-30,-58,-57,-60,-58,-29,56,-51,-49,56,56,56,56,-31,56,56,56,-32,56,56,-33,56,56,-34,56,56,-28,-50,-48,56,]),'LBRACKET':([31,43,46,83,89,121,],[-81,81,81,81,81,-48,]),'LBRACE':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,55,73,76,79,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,120,121,127,131,],[-82,28,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,-23,28,-65,28,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,-15,-48,28,-52,]),'STRING_LITERAL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,118,121,124,131,],[-82,32,-10,-2,-71,-61,32,-69,-67,-6,-29,-70,-54,-60,-79,-59,-53,-11,-24,-25,-77,-73,-4,-9,-78,-82,32,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-16,-17,32,-18,-19,-80,-23,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-65,32,-51,32,32,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,32,-48,32,-52,]),'LOGAND':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,62,-81,-26,-30,-58,-57,-60,-58,-29,62,-51,-49,62,62,62,62,-31,62,62,62,-32,62,62,-33,62,62,-34,62,62,-28,-50,-48,62,]),'INT':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,37,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,37,-23,37,-65,37,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,37,-48,-52,]),'DOUBLE':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,41,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,41,-23,41,-65,41,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,41,-48,-52,]),'FLOAT':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,39,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,39,-23,39,-65,39,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,39,-48,-52,]),'SIGNED':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,40,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,40,-23,40,-65,40,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,40,-48,-52,]),'MINUSEQUALS':([14,31,33,43,54,80,83,85,88,89,117,121,],[50,-81,50,50,-66,-51,-49,50,50,50,-50,-48,]),'SIZE_T':([0,1,2,4,5,6,8,9,10,11,12,14,15,16,18,19,21,22,23,24,25,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,52,53,55,73,76,78,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,117,119,121,131,],[-82,42,-10,-2,-71,-61,-69,-67,-6,-29,-70,-60,-79,-59,-11,-24,-25,-77,-73,-4,-9,-78,-82,-5,-81,-26,-30,-7,-3,-72,-8,-74,-76,-75,-68,-58,-57,-60,-58,-80,42,-23,42,-65,42,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-62,-28,-63,-64,-50,42,-48,-52,]),'RBRACKET':([6,11,16,19,21,27,31,32,34,44,45,46,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,115,117,121,],[-61,-29,-59,-24,-25,-78,-81,-26,-30,-57,-60,-58,-51,-49,-37,-36,-43,-39,-31,-40,-41,-45,-32,-42,-44,-33,-38,-46,-34,-47,-35,-28,121,-50,-48,]),'OR':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,57,-81,-26,-30,-58,-57,-60,-58,-29,57,-51,-49,57,57,57,57,-31,57,57,57,-32,57,57,-33,57,57,-34,57,57,-28,-50,-48,57,]),'MOD':([6,11,14,16,19,21,27,31,32,34,43,44,45,46,74,75,80,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,121,122,],[-61,-29,-60,-59,-24,-25,72,-81,-26,-30,-58,-57,-60,-58,-29,72,-51,-49,72,72,72,72,-31,72,72,72,-32,72,72,-33,72,72,-34,72,72,-28,-50,-48,72,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([1,73,],[4,4,]),'unary_token_before':([1,7,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,124,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constant':([1,7,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,124,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'unary_expression':([1,7,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,124,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'declaration':([1,73,],[30,30,]),'unary_token_after':([126,],[130,]),'binop_expression':([1,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,],[11,74,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'increment':([124,],[125,]),'native_type':([1,53,73,78,119,],[15,15,15,15,15,]),'arglist':([33,],[79,]),'arg_params':([78,119,],[112,123,]),'array_reference':([1,7,29,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,124,],[14,45,45,45,85,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,14,45,45,45,45,45,]),'subscript':([43,46,83,89,],[83,83,83,83,]),'type':([1,53,73,78,119,],[24,86,24,86,86,]),'empty':([0,28,78,119,],[2,2,111,111,]),'for_loop':([1,73,],[25,25,]),'assignment_expression':([1,53,73,],[26,87,26,]),'beginning_list':([0,28,],[1,73,]),'binop':([1,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,],[27,75,27,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,27,27,27,27,122,]),'compound':([1,73,79,127,],[10,10,114,131,]),'typeid':([1,53,73,78,119,],[33,88,33,110,110,]),'term':([1,7,29,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,118,124,],[34,44,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,126,]),'assignment_expression_semi':([1,73,],[35,35,]),'subscript_list':([43,46,83,89,],[80,80,117,80,]),'function_declaration':([1,73,],[36,36,]),'expr':([1,49,73,77,81,82,],[38,84,38,109,115,116,]),'assignment_operator':([14,33,43,85,88,89,],[49,77,82,49,77,82,]),'identifier':([1,7,24,29,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,82,86,118,124,],[43,46,54,46,46,89,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,43,46,46,46,54,46,46,]),'first':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> first","S'",1,None,None,None),
  ('first -> beginning_list','first',1,'p_first','lan_parser.py',14),
  ('beginning_list -> beginning_list comment','beginning_list',2,'p_beginning_list','lan_parser.py',21),
  ('beginning_list -> beginning_list function_declaration','beginning_list',2,'p_beginning_list','lan_parser.py',22),
  ('beginning_list -> beginning_list type','beginning_list',2,'p_beginning_list','lan_parser.py',23),
  ('beginning_list -> beginning_list declaration','beginning_list',2,'p_beginning_list','lan_parser.py',24),
  ('beginning_list -> beginning_list compound','beginning_list',2,'p_beginning_list','lan_parser.py',25),
  ('beginning_list -> beginning_list assignment_expression_semi','beginning_list',2,'p_beginning_list','lan_parser.py',26),
  ('beginning_list -> beginning_list expr','beginning_list',2,'p_beginning_list','lan_parser.py',27),
  ('beginning_list -> beginning_list for_loop','beginning_list',2,'p_beginning_list','lan_parser.py',28),
  ('beginning_list -> empty','beginning_list',1,'p_beginning_list','lan_parser.py',29),
  ('comment -> COMMENT','comment',1,'p_comment','lan_parser.py',39),
  ('arg_params -> typeid COMMA arg_params','arg_params',3,'p_arg_params','lan_parser.py',45),
  ('arg_params -> typeid','arg_params',1,'p_arg_params','lan_parser.py',46),
  ('arg_params -> empty','arg_params',1,'p_arg_params','lan_parser.py',47),
  ('arglist -> LPAREN arg_params RPAREN','arglist',3,'p_arglist','lan_parser.py',55),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',59),
  ('assignment_operator -> PLUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',60),
  ('assignment_operator -> MINUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',61),
  ('assignment_operator -> TIMESEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',62),
  ('assignment_expression -> typeid assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',67),
  ('assignment_expression -> identifier assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',68),
  ('assignment_expression -> array_reference assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',69),
  ('assignment_expression_semi -> assignment_expression SEMI','assignment_expression_semi',2,'p_assignment_expression_semi','lan_parser.py',74),
  ('constant -> INT_CONST','constant',1,'p_constant','lan_parser.py',79),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','lan_parser.py',80),
  ('constant -> STRING_LITERAL','constant',1,'p_constant','lan_parser.py',81),
  ('increment -> term unary_token_after','increment',2,'p_increment','lan_parser.py',86),
  ('binop -> LPAREN binop_expression RPAREN','binop',3,'p_binop_paren','lan_parser.py',92),
  ('binop -> binop_expression','binop',1,'p_binop_paren','lan_parser.py',93),
  ('binop_expression -> term','binop_expression',1,'p_binop_expression','lan_parser.py',102),
  ('binop_expression -> binop DIVIDE binop','binop_expression',3,'p_binop_expression','lan_parser.py',103),
  ('binop_expression -> binop TIMES binop','binop_expression',3,'p_binop_expression','lan_parser.py',104),
  ('binop_expression -> binop PLUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',105),
  ('binop_expression -> binop MINUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',106),
  ('binop_expression -> binop MOD binop','binop_expression',3,'p_binop_expression','lan_parser.py',107),
  ('binop_expression -> binop OR binop','binop_expression',3,'p_binop_expression','lan_parser.py',108),
  ('binop_expression -> binop AND binop','binop_expression',3,'p_binop_expression','lan_parser.py',109),
  ('binop_expression -> binop LSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',110),
  ('binop_expression -> binop RSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',111),
  ('binop_expression -> binop LOGOR binop','binop_expression',3,'p_binop_expression','lan_parser.py',112),
  ('binop_expression -> binop LOGAND binop','binop_expression',3,'p_binop_expression','lan_parser.py',113),
  ('binop_expression -> binop LT binop','binop_expression',3,'p_binop_expression','lan_parser.py',114),
  ('binop_expression -> binop GT binop','binop_expression',3,'p_binop_expression','lan_parser.py',115),
  ('binop_expression -> binop LE binop','binop_expression',3,'p_binop_expression','lan_parser.py',116),
  ('binop_expression -> binop GE binop','binop_expression',3,'p_binop_expression','lan_parser.py',117),
  ('binop_expression -> binop EQ binop','binop_expression',3,'p_binop_expression','lan_parser.py',118),
  ('binop_expression -> binop NE binop','binop_expression',3,'p_binop_expression','lan_parser.py',119),
  ('subscript -> LBRACKET expr RBRACKET','subscript',3,'p_subscript','lan_parser.py',131),
  ('subscript_list -> subscript','subscript_list',1,'p_subscript_list','lan_parser.py',135),
  ('subscript_list -> subscript subscript_list','subscript_list',2,'p_subscript_list','lan_parser.py',136),
  ('array_reference -> identifier subscript_list','array_reference',2,'p_array_reference','lan_parser.py',144),
  ('for_loop -> FOR LPAREN assignment_expression SEMI binop SEMI increment RPAREN compound','for_loop',9,'p_for_loop','lan_parser.py',150),
  ('unary_token_before -> MINUS','unary_token_before',1,'p_unary_token_before','lan_parser.py',155),
  ('unary_token_before -> LOGNOT','unary_token_before',1,'p_unary_token_before','lan_parser.py',156),
  ('unary_token_after -> PLUSPLUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',161),
  ('unary_token_after -> MINUSMINUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',162),
  ('unary_expression -> unary_token_before term','unary_expression',2,'p_unary_expression','lan_parser.py',167),
  ('term -> identifier','term',1,'p_term','lan_parser.py',173),
  ('term -> constant','term',1,'p_term','lan_parser.py',174),
  ('term -> array_reference','term',1,'p_term','lan_parser.py',175),
  ('term -> unary_expression','term',1,'p_term','lan_parser.py',176),
  ('compound -> LBRACE beginning_list RBRACE','compound',3,'p_compound','lan_parser.py',182),
  ('function_declaration -> typeid arglist SEMI','function_declaration',3,'p_func_decl_1','lan_parser.py',186),
  ('function_declaration -> typeid arglist compound','function_declaration',3,'p_func_decl_2','lan_parser.py',190),
  ('declaration -> typeid SEMI','declaration',2,'p_decl','lan_parser.py',194),
  ('typeid -> type identifier','typeid',2,'p_typeid','lan_parser.py',198),
  ('native_type -> VOID','native_type',1,'p_native_type','lan_parser.py',203),
  ('native_type -> SIZE_T','native_type',1,'p_native_type','lan_parser.py',204),
  ('native_type -> UNKNOWN','native_type',1,'p_native_type','lan_parser.py',205),
  ('native_type -> CHAR','native_type',1,'p_native_type','lan_parser.py',206),
  ('native_type -> SHORT','native_type',1,'p_native_type','lan_parser.py',207),
  ('native_type -> INT','native_type',1,'p_native_type','lan_parser.py',208),
  ('native_type -> LONG','native_type',1,'p_native_type','lan_parser.py',209),
  ('native_type -> FLOAT','native_type',1,'p_native_type','lan_parser.py',210),
  ('native_type -> DOUBLE','native_type',1,'p_native_type','lan_parser.py',211),
  ('native_type -> SIGNED','native_type',1,'p_native_type','lan_parser.py',212),
  ('native_type -> UNSIGNED','native_type',1,'p_native_type','lan_parser.py',213),
  ('expr -> binop','expr',1,'p_expr','lan_parser.py',218),
  ('type -> native_type','type',1,'p_type','lan_parser.py',224),
  ('type -> native_type TIMES','type',2,'p_type','lan_parser.py',225),
  ('identifier -> ID','identifier',1,'p_identifier','lan_parser.py',232),
  ('empty -> <empty>','empty',0,'p_empty','lan_parser.py',238),
]
