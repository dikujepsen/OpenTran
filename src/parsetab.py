
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "'\xbd\xa8 \x91+\xe7f\x9eYJ\x8c\xae6b$"
    
_lr_action_items = {'LOGOR':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,64,-85,-27,-31,-59,-58,-62,-61,-59,-30,64,-65,-52,-50,64,64,64,64,-32,64,64,64,-33,64,64,-34,64,64,-35,64,64,-29,64,-59,-51,-16,-49,64,]),'SHORT':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,5,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,5,5,-69,5,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,5,-49,-53,]),'RSHIFT':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,62,-85,-27,-31,-59,-58,-62,-61,-59,-30,62,-65,-52,-50,62,62,62,62,-32,62,62,62,-33,62,62,-34,62,62,-35,62,62,-29,62,-59,-51,-16,-49,62,]),'UNKNOWN':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,8,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,8,8,-69,8,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,8,-49,-53,]),'VOID':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,9,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,9,9,-69,9,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,9,-49,-53,]),'NE':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,74,-85,-27,-31,-59,-58,-62,-61,-59,-30,74,-65,-52,-50,74,74,74,74,-32,74,74,74,-33,74,74,-34,74,74,-35,74,74,-29,74,-59,-51,-16,-49,74,]),'CHAR':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,13,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,13,13,-69,13,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,13,-49,-53,]),'LOGNOT':([0,1,2,4,6,7,10,11,12,14,17,18,19,20,21,22,24,27,28,29,30,31,32,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,123,124,125,126,129,136,],[-86,14,-9,-2,-63,14,-5,-62,-30,-55,-60,-54,-10,-25,-26,-61,-8,-82,-86,14,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-17,-18,14,-19,-20,-24,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-69,14,14,-65,-52,14,14,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,14,-16,14,-49,14,-53,]),'FLOAT_CONST':([0,1,2,4,6,7,10,11,12,14,17,18,19,20,21,22,24,27,28,29,30,31,32,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,123,124,125,126,129,136,],[-86,21,-9,-2,-63,21,-5,-62,-30,-55,-60,-54,-10,-25,-26,-61,-8,-82,-86,21,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-17,-18,21,-19,-20,-24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-69,21,21,-65,-52,21,21,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,21,-16,21,-49,21,-53,]),'LSHIFT':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,71,-85,-27,-31,-59,-58,-62,-61,-59,-30,71,-65,-52,-50,71,71,71,71,-32,71,71,71,-33,71,71,-34,71,71,-35,71,71,-29,71,-59,-51,-16,-49,71,]),'MINUS':([0,1,2,4,6,7,10,11,12,14,17,18,19,20,21,22,24,27,28,29,30,31,32,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,117,118,119,122,123,124,125,126,127,129,136,],[-86,18,-9,-2,-63,18,-5,-62,-30,-55,-60,-54,-10,-25,-26,-61,-8,73,-86,18,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-17,-18,18,-19,-20,-24,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-30,73,-69,18,18,-65,-52,18,18,-50,73,73,73,73,-32,73,73,73,-33,73,73,-34,73,73,-35,73,73,-64,-29,73,-59,-66,-67,-51,18,-16,18,-49,73,18,-53,]),'DIVIDE':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,63,-85,-27,-31,-59,-58,-62,-61,-59,-30,63,-65,-52,-50,63,63,63,63,-32,63,63,63,-33,63,63,63,63,63,63,63,63,-29,63,-59,-51,-16,-49,63,]),'COMMENT':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,76,79,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,126,136,],[-86,19,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,19,-69,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,-49,-53,]),'INT_CONST':([0,1,2,4,6,7,10,11,12,14,17,18,19,20,21,22,24,27,28,29,30,31,32,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,123,124,125,126,129,136,],[-86,20,-9,-2,-63,20,-5,-62,-30,-55,-60,-54,-10,-25,-26,-61,-8,-82,-86,20,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-17,-18,20,-19,-20,-24,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-69,20,20,-65,-52,20,20,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,20,-16,20,-49,20,-53,]),'LE':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,69,-85,-27,-31,-59,-58,-62,-61,-59,-30,69,-65,-52,-50,69,69,69,69,-32,69,69,69,-33,69,69,-34,69,69,-35,69,69,-29,69,-59,-51,-16,-49,69,]),'RPAREN':([6,12,17,20,21,31,32,34,45,46,47,48,56,77,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,114,115,116,117,122,124,125,126,128,130,133,134,135,],[-63,-30,-60,-25,-26,-85,-27,-31,-58,-62,-61,-59,-70,111,-86,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-29,124,-15,-14,-12,-13,-51,-16,-86,-49,-11,132,-56,-57,-28,]),'SEMI':([6,11,12,17,20,21,25,27,31,32,33,34,45,46,47,48,56,82,83,84,87,88,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,121,122,124,126,127,],[-63,49,-30,-60,-25,-26,57,-82,-85,-27,79,-31,-58,-62,-61,-59,-70,118,-65,-52,-50,-23,123,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-29,-21,-22,-51,-16,-49,129,]),'UNSIGNED':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,41,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,41,41,-69,41,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,41,-49,-53,]),'LONG':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,15,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,15,15,-69,15,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,15,-49,-53,]),'LT':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,68,-85,-27,-31,-59,-58,-62,-61,-59,-30,68,-65,-52,-50,68,68,68,68,-32,68,68,68,-33,68,68,-34,68,68,-35,68,68,-29,68,-59,-51,-16,-49,68,]),'PLUS':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,70,-85,-27,-31,-59,-58,-62,-61,-59,-30,70,-65,-52,-50,70,70,70,70,-32,70,70,70,-33,70,70,-34,70,70,-35,70,70,-29,70,-59,-51,-16,-49,70,]),'COMMA':([31,56,116,],[-85,-70,125,]),'TIMESEQUALS':([22,31,33,44,56,84,87,89,91,92,122,126,],[55,-85,55,55,-70,-52,-50,55,55,55,-51,-49,]),'$end':([0,1,2,3,4,6,10,11,12,17,19,20,21,22,24,27,30,31,32,34,35,36,38,44,45,46,47,48,49,57,79,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,126,136,],[-86,-1,-9,0,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,-69,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,-49,-53,]),'GT':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,61,-85,-27,-31,-59,-58,-62,-61,-59,-30,61,-65,-52,-50,61,61,61,61,-32,61,61,61,-33,61,61,-34,61,61,-35,61,61,-29,61,-59,-51,-16,-49,61,]),'RBRACE':([2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,76,79,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,126,136,],[-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,110,-69,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,-49,-53,]),'FOR':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,76,79,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,126,136,],[-86,26,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,26,-69,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,-49,-53,]),'PLUSPLUS':([6,17,20,21,31,32,45,46,47,48,83,84,87,122,124,126,131,],[-63,-60,-25,-26,-85,-27,-58,-62,-61,-59,-65,-52,-50,-51,-16,-49,133,]),'EQUALS':([22,31,33,44,56,84,87,89,91,92,122,126,],[51,-85,51,51,-70,-52,-50,51,51,51,-51,-49,]),'TIMES':([5,6,8,9,11,12,13,15,16,17,20,21,22,27,31,32,34,37,39,40,41,42,43,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-75,-63,-73,-71,-62,-30,-74,-77,50,-60,-25,-26,-61,67,-85,-27,-31,-76,-78,-80,-81,-79,-72,-59,-58,-62,-61,-59,-30,67,-65,-52,-50,67,67,67,67,-32,67,67,67,-33,67,67,67,67,67,67,67,67,-29,67,-59,-51,-16,-49,67,]),'PLUSEQUALS':([22,31,33,44,56,84,87,89,91,92,122,126,],[52,-85,52,52,-70,-52,-50,52,52,52,-51,-49,]),'GE':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,66,-85,-27,-31,-59,-58,-62,-61,-59,-30,66,-65,-52,-50,66,66,66,66,-32,66,66,66,-33,66,66,-34,66,66,-35,66,66,-29,66,-59,-51,-16,-49,66,]),'LPAREN':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,118,119,122,123,124,125,126,136,],[-86,29,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,58,-82,-86,29,-4,-85,-27,81,-31,-6,-3,-7,81,-58,-62,-61,81,-68,-17,-18,29,-19,-20,-70,-24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-69,29,29,-65,-52,29,29,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,81,-66,-67,-51,29,-16,29,-49,-53,]),'MINUSMINUS':([6,17,20,21,31,32,45,46,47,48,83,84,87,122,124,126,131,],[-63,-60,-25,-26,-85,-27,-58,-62,-61,-59,-65,-52,-50,-51,-16,-49,134,]),'EQ':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,72,-85,-27,-31,-59,-58,-62,-61,-59,-30,72,-65,-52,-50,72,72,72,72,-32,72,72,72,-33,72,72,-34,72,72,-35,72,72,-29,72,-59,-51,-16,-49,72,]),'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,123,124,125,126,129,136,],[-86,31,-9,-2,-75,-63,31,-73,-71,-5,-62,-30,-74,-55,-77,-83,-60,-54,-10,-25,-26,-61,31,-8,-82,-86,31,-4,-85,-27,-31,-6,-3,-76,-7,-78,-80,-81,-79,-72,-59,-58,-62,-61,-59,-68,-84,-17,-18,31,-19,-20,-24,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-69,31,31,-65,-52,31,31,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,31,-16,31,-49,31,-53,]),'AND':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,59,-85,-27,-31,-59,-58,-62,-61,-59,-30,59,-65,-52,-50,59,59,59,59,-32,59,59,59,-33,59,59,-34,59,59,-35,59,59,-29,59,-59,-51,-16,-49,59,]),'LBRACKET':([31,44,48,87,92,117,126,],[-85,85,85,85,85,85,-49,]),'LBRACE':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,76,79,82,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,126,132,136,],[-86,28,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,28,-69,28,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,-49,28,-53,]),'STRING_LITERAL':([0,1,2,4,6,7,10,11,12,14,17,18,19,20,21,22,24,27,28,29,30,31,32,34,35,36,38,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,123,124,125,126,129,136,],[-86,32,-9,-2,-63,32,-5,-62,-30,-55,-60,-54,-10,-25,-26,-61,-8,-82,-86,32,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-17,-18,32,-19,-20,-24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-69,32,32,-65,-52,32,32,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,32,-16,32,-49,32,-53,]),'LOGAND':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,65,-85,-27,-31,-59,-58,-62,-61,-59,-30,65,-65,-52,-50,65,65,65,65,-32,65,65,65,-33,65,65,-34,65,65,-35,65,65,-29,65,-59,-51,-16,-49,65,]),'INT':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,37,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,37,37,-69,37,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,37,-49,-53,]),'DOUBLE':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,42,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,42,42,-69,42,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,42,-49,-53,]),'FLOAT':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,39,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,39,39,-69,39,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,39,-49,-53,]),'SIGNED':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,40,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,40,40,-69,40,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,40,-49,-53,]),'MINUSEQUALS':([22,31,33,44,56,84,87,89,91,92,122,126,],[54,-85,54,54,-70,-52,-50,54,54,54,-51,-49,]),'SIZE_T':([0,1,2,4,6,10,11,12,17,19,20,21,22,24,27,28,30,31,32,34,35,36,38,44,45,46,47,48,49,57,58,76,79,81,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,122,124,125,126,136,],[-86,43,-9,-2,-63,-5,-62,-30,-60,-10,-25,-26,-61,-8,-82,-86,-4,-85,-27,-31,-6,-3,-7,-59,-58,-62,-61,-59,-68,-24,43,43,-69,43,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-64,-29,-66,-67,-51,-16,43,-49,-53,]),'RBRACKET':([6,12,17,20,21,27,31,32,34,45,46,47,48,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,120,122,124,126,],[-63,-30,-60,-25,-26,-82,-85,-27,-31,-58,-62,-61,-59,-65,-52,-50,-38,-37,-44,-40,-32,-41,-42,-46,-33,-43,-45,-34,-39,-47,-35,-48,-36,-29,126,-51,-16,-49,]),'OR':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,60,-85,-27,-31,-59,-58,-62,-61,-59,-30,60,-65,-52,-50,60,60,60,60,-32,60,60,60,-33,60,60,-34,60,60,-35,60,60,-29,60,-59,-51,-16,-49,60,]),'MOD':([6,11,12,17,20,21,22,27,31,32,34,44,45,46,47,48,77,78,83,84,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,115,117,122,124,126,127,],[-63,-62,-30,-60,-25,-26,-61,75,-85,-27,-31,-59,-58,-62,-61,-59,-30,75,-65,-52,-50,75,75,75,75,-32,75,75,75,-33,75,75,-34,75,75,-35,75,75,-29,75,-59,-51,-16,-49,75,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comment':([1,76,],[4,4,]),'unary_token_before':([1,7,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'constant':([1,7,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'unary_expression':([1,7,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'declaration':([1,76,],[30,30,]),'unary_token_after':([131,],[135,]),'function_call':([1,7,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[11,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,11,46,46,46,46,46,46,46,]),'binop_expression':([1,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,],[12,77,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'increment':([129,],[130,]),'native_type':([1,58,76,81,125,],[16,16,16,16,16,]),'arglist':([33,44,48,117,],[82,83,83,83,]),'arg_params':([81,125,],[113,128,]),'array_reference':([1,7,29,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[22,47,47,47,89,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,22,47,47,47,47,47,47,47,]),'subscript':([44,48,87,92,117,],[87,87,87,87,87,]),'type':([1,58,76,81,125,],[23,23,23,23,23,]),'empty':([0,28,81,125,],[2,2,114,114,]),'for_loop':([1,76,],[24,24,]),'assignment_expression':([1,58,76,],[25,90,25,]),'binop':([1,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,],[27,78,27,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,27,27,115,27,27,127,115,]),'compound':([1,76,82,132,],[10,10,119,136,]),'typeid':([1,58,76,81,125,],[33,91,33,116,116,]),'term':([1,7,29,53,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[34,45,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,131,]),'assignment_expression_semi':([1,76,],[35,35,]),'subscript_list':([44,48,87,92,117,],[84,84,122,84,84,]),'function_declaration':([1,76,],[36,36,]),'expr':([1,53,76,80,85,86,],[38,88,38,112,120,121,]),'top_level':([0,28,],[1,76,]),'assignment_operator':([22,33,44,89,91,92,],[53,80,86,53,80,86,]),'identifier':([1,7,23,29,53,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,85,86,123,125,129,],[44,48,56,48,48,92,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,44,48,117,48,48,48,117,48,]),'first':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> first","S'",1,None,None,None),
  ('first -> top_level','first',1,'p_first','lan_parser.py',14),
  ('top_level -> top_level comment','top_level',2,'p_top_level','lan_parser.py',21),
  ('top_level -> top_level function_declaration','top_level',2,'p_top_level','lan_parser.py',22),
  ('top_level -> top_level declaration','top_level',2,'p_top_level','lan_parser.py',23),
  ('top_level -> top_level compound','top_level',2,'p_top_level','lan_parser.py',24),
  ('top_level -> top_level assignment_expression_semi','top_level',2,'p_top_level','lan_parser.py',25),
  ('top_level -> top_level expr','top_level',2,'p_top_level','lan_parser.py',26),
  ('top_level -> top_level for_loop','top_level',2,'p_top_level','lan_parser.py',27),
  ('top_level -> empty','top_level',1,'p_top_level','lan_parser.py',28),
  ('comment -> COMMENT','comment',1,'p_comment','lan_parser.py',38),
  ('arg_params -> typeid COMMA arg_params','arg_params',3,'p_arg_params','lan_parser.py',44),
  ('arg_params -> typeid','arg_params',1,'p_arg_params','lan_parser.py',45),
  ('arg_params -> identifier','arg_params',1,'p_arg_params','lan_parser.py',46),
  ('arg_params -> binop','arg_params',1,'p_arg_params','lan_parser.py',47),
  ('arg_params -> empty','arg_params',1,'p_arg_params','lan_parser.py',48),
  ('arglist -> LPAREN arg_params RPAREN','arglist',3,'p_arglist','lan_parser.py',56),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',60),
  ('assignment_operator -> PLUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',61),
  ('assignment_operator -> MINUSEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',62),
  ('assignment_operator -> TIMESEQUALS','assignment_operator',1,'p_assignment_operator','lan_parser.py',63),
  ('assignment_expression -> typeid assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',68),
  ('assignment_expression -> identifier assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',69),
  ('assignment_expression -> array_reference assignment_operator expr','assignment_expression',3,'p_assignment_expression','lan_parser.py',70),
  ('assignment_expression_semi -> assignment_expression SEMI','assignment_expression_semi',2,'p_assignment_expression_semi','lan_parser.py',75),
  ('constant -> INT_CONST','constant',1,'p_constant','lan_parser.py',80),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','lan_parser.py',81),
  ('constant -> STRING_LITERAL','constant',1,'p_constant','lan_parser.py',82),
  ('increment -> term unary_token_after','increment',2,'p_increment','lan_parser.py',87),
  ('binop -> LPAREN binop_expression RPAREN','binop',3,'p_binop','lan_parser.py',93),
  ('binop -> binop_expression','binop',1,'p_binop','lan_parser.py',94),
  ('binop_expression -> term','binop_expression',1,'p_binop_expression','lan_parser.py',103),
  ('binop_expression -> binop DIVIDE binop','binop_expression',3,'p_binop_expression','lan_parser.py',104),
  ('binop_expression -> binop TIMES binop','binop_expression',3,'p_binop_expression','lan_parser.py',105),
  ('binop_expression -> binop PLUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',106),
  ('binop_expression -> binop MINUS binop','binop_expression',3,'p_binop_expression','lan_parser.py',107),
  ('binop_expression -> binop MOD binop','binop_expression',3,'p_binop_expression','lan_parser.py',108),
  ('binop_expression -> binop OR binop','binop_expression',3,'p_binop_expression','lan_parser.py',109),
  ('binop_expression -> binop AND binop','binop_expression',3,'p_binop_expression','lan_parser.py',110),
  ('binop_expression -> binop LSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',111),
  ('binop_expression -> binop RSHIFT binop','binop_expression',3,'p_binop_expression','lan_parser.py',112),
  ('binop_expression -> binop LOGOR binop','binop_expression',3,'p_binop_expression','lan_parser.py',113),
  ('binop_expression -> binop LOGAND binop','binop_expression',3,'p_binop_expression','lan_parser.py',114),
  ('binop_expression -> binop LT binop','binop_expression',3,'p_binop_expression','lan_parser.py',115),
  ('binop_expression -> binop GT binop','binop_expression',3,'p_binop_expression','lan_parser.py',116),
  ('binop_expression -> binop LE binop','binop_expression',3,'p_binop_expression','lan_parser.py',117),
  ('binop_expression -> binop GE binop','binop_expression',3,'p_binop_expression','lan_parser.py',118),
  ('binop_expression -> binop EQ binop','binop_expression',3,'p_binop_expression','lan_parser.py',119),
  ('binop_expression -> binop NE binop','binop_expression',3,'p_binop_expression','lan_parser.py',120),
  ('subscript -> LBRACKET expr RBRACKET','subscript',3,'p_subscript','lan_parser.py',132),
  ('subscript_list -> subscript','subscript_list',1,'p_subscript_list','lan_parser.py',136),
  ('subscript_list -> subscript subscript_list','subscript_list',2,'p_subscript_list','lan_parser.py',137),
  ('array_reference -> identifier subscript_list','array_reference',2,'p_array_reference','lan_parser.py',145),
  ('for_loop -> FOR LPAREN assignment_expression SEMI binop SEMI increment RPAREN compound','for_loop',9,'p_for_loop','lan_parser.py',151),
  ('unary_token_before -> MINUS','unary_token_before',1,'p_unary_token_before','lan_parser.py',156),
  ('unary_token_before -> LOGNOT','unary_token_before',1,'p_unary_token_before','lan_parser.py',157),
  ('unary_token_after -> PLUSPLUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',162),
  ('unary_token_after -> MINUSMINUS','unary_token_after',1,'p_unary_token_after','lan_parser.py',163),
  ('unary_expression -> unary_token_before term','unary_expression',2,'p_unary_expression','lan_parser.py',168),
  ('term -> identifier','term',1,'p_term','lan_parser.py',174),
  ('term -> constant','term',1,'p_term','lan_parser.py',175),
  ('term -> array_reference','term',1,'p_term','lan_parser.py',176),
  ('term -> function_call','term',1,'p_term','lan_parser.py',177),
  ('term -> unary_expression','term',1,'p_term','lan_parser.py',178),
  ('compound -> LBRACE top_level RBRACE','compound',3,'p_compound','lan_parser.py',184),
  ('function_call -> identifier arglist','function_call',2,'p_func_call','lan_parser.py',188),
  ('function_declaration -> typeid arglist SEMI','function_declaration',3,'p_func_decl_1','lan_parser.py',192),
  ('function_declaration -> typeid arglist compound','function_declaration',3,'p_func_decl_2','lan_parser.py',196),
  ('function_declaration -> function_call SEMI','function_declaration',2,'p_func_decl_3','lan_parser.py',200),
  ('declaration -> typeid SEMI','declaration',2,'p_decl','lan_parser.py',207),
  ('typeid -> type identifier','typeid',2,'p_typeid','lan_parser.py',211),
  ('native_type -> VOID','native_type',1,'p_native_type','lan_parser.py',216),
  ('native_type -> SIZE_T','native_type',1,'p_native_type','lan_parser.py',217),
  ('native_type -> UNKNOWN','native_type',1,'p_native_type','lan_parser.py',218),
  ('native_type -> CHAR','native_type',1,'p_native_type','lan_parser.py',219),
  ('native_type -> SHORT','native_type',1,'p_native_type','lan_parser.py',220),
  ('native_type -> INT','native_type',1,'p_native_type','lan_parser.py',221),
  ('native_type -> LONG','native_type',1,'p_native_type','lan_parser.py',222),
  ('native_type -> FLOAT','native_type',1,'p_native_type','lan_parser.py',223),
  ('native_type -> DOUBLE','native_type',1,'p_native_type','lan_parser.py',224),
  ('native_type -> SIGNED','native_type',1,'p_native_type','lan_parser.py',225),
  ('native_type -> UNSIGNED','native_type',1,'p_native_type','lan_parser.py',226),
  ('expr -> binop','expr',1,'p_expr','lan_parser.py',231),
  ('type -> native_type','type',1,'p_type','lan_parser.py',237),
  ('type -> native_type TIMES','type',2,'p_type','lan_parser.py',238),
  ('identifier -> ID','identifier',1,'p_identifier','lan_parser.py',245),
  ('empty -> <empty>','empty',0,'p_empty','lan_parser.py',251),
]
